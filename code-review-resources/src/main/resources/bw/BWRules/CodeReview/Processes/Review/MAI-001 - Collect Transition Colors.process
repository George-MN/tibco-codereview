<?xml version="1.0" encoding="UTF-8"?>
<!--

    (C) Copyright 2011-2015 FastConnect SAS
    (http://www.fastconnect.fr/) and others.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="com/tibco/pe/commands" xmlns:ns5="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx="http://www.tibco.com/schemas/BWRules/CodeReview/SharedRessources/Schemas/Schema.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns4="http://www.tibco.com/pe/EngineTypes" xmlns:ns3="http://fastconnect.fr/tibco/bw/fccodereview/projectcontent" xmlns:ns0="http://www.tibco.com/namespaces/tnt/plugins/file/v2" xmlns:pfx5="http://www.fastconnect.fr/FCTibcoFactory/CodeReview/RuleCard.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.fastconnect.fr/FCTibcoFactory/CodeReview/ReviewResult.xsd" xmlns:pfx3="http://www.fastconnect.fr/FCCodeReview/ReviewProcessInput.xsd" xmlns:pfx2="http://www.fastconnect.fr/FCTibcoFactory/CodeReview/TestResult.xsd">
    <xsd:import namespace="http://www.fastconnect.fr/FCTibcoFactory/CodeReview/ReviewResult.xsd" schemaLocation="/CodeReview/Resources/XSD/ReviewResult.xsd"/>
    <xsd:import namespace="http://www.fastconnect.fr/FCTibcoFactory/CodeReview/RuleCard.xsd" schemaLocation="/CodeReview/Resources/XSD/RuleCard.xsd"/>
    <pd:name>CodeReview/Processes/Review/MAI-001 - Collect Transition Colors.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx3:root"/>
    <pd:startX>58</pd:startX>
    <pd:startY>66</pd:startY>
    <pd:returnBindings>
        <pfx4:review-result>
            <pfx4:errors>
                <xsl:copy-of select="$Accum/AccumulatedOutput/root/pfx4:errors/pfx4:error"/>
            </pfx4:errors>
            <pfx4:rule>
                <xsl:attribute name="disabled">
                    <xsl:value-of select="$Start/pfx3:root/pfx3:disabled"/>
                </xsl:attribute>
                <xsl:attribute name="ruleId">
                    <xsl:value-of select="'MAI-001'"/>
                </xsl:attribute>
                <xsl:variable name="nbXpath" select="count($Accum/AccumulatedOutput/root/pfx4:review-result/pfx4:rule/pfx4:result/pfx4:child[pfx4:key = 'transition-type'][pfx4:value = 'xpath']) - 1"/>
                <xsl:variable name="nbOtherwise" select="count($Accum/AccumulatedOutput/root/pfx4:review-result/pfx4:rule/pfx4:result/pfx4:child[pfx4:key = 'transition-type'][pfx4:value = 'otherwise']) - 1"/>
                <xsl:variable name="nbError" select="count($Accum/AccumulatedOutput/root/pfx4:review-result/pfx4:rule/pfx4:result/pfx4:child[pfx4:key = 'transition-type'][pfx4:value = 'error']) - 1"/>
                <xsl:variable name="nbAlways" select="count($Accum/AccumulatedOutput/root/pfx4:review-result/pfx4:rule/pfx4:result/pfx4:child[pfx4:key = 'transition-type'][pfx4:value = 'always']) - 1"/>
                <xsl:variable name="tmpGrade" select="100 - &#xA;(if($nbAlways &lt; 0) then 0 else $nbAlways) * 10 - &#xA;(if($nbError &lt; 0) then 0 else $nbError) * 10 - &#xA;(if($nbOtherwise &lt; 0) then 0 else $nbOtherwise) * 10 - &#xA;(if($nbXpath &lt; 0) then 0 else $nbXpath) * 10"/>
                <xsl:attribute name="grade">
                    <xsl:value-of select="if($tmpGrade &lt; 0)&#xA;then 0&#xA;else $tmpGrade"/>
                </xsl:attribute>
                <xsl:attribute name="weight">
                    <xsl:value-of select="10"/>
                </xsl:attribute>
                <xsl:copy-of select="$Accum/AccumulatedOutput/root/pfx4:review-result/pfx4:rule/pfx4:result"/>
            </pfx4:rule>
        </pfx4:review-result>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx4:review-result"/>
    <pd:endX>986</pd:endX>
    <pd:endY>66</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <AuditProcess>
            <xsd:element name="audit-process">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="activity-number" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </AuditProcess>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1313588926421</pd:targetNamespace>
    <pd:activity name="Get file by type">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>142</pd:x>
        <pd:y>194</pd:y>
        <config>
            <processName>/CodeReview/Processes/Project explorer/Get file by type.process</processName>
        </config>
        <pd:inputBindings>
            <type>
                <xsl:value-of select="'process'"/>
            </type>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Transition Types">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>143</pd:x>
        <pd:y>330</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="type" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <type>
                    <xsl:value-of select="'always'"/>
                </type>
                <type>
                    <xsl:value-of select="'error'"/>
                </type>
                <type>
                    <xsl:value-of select="'otherwise'"/>
                </type>
                <type>
                    <xsl:value-of select="'xpath'"/>
                </type>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Iterate on transition type">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>227</pd:x>
        <pd:y>123</pd:y>
        <pd:width>648</pd:width>
        <pd:height>380</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Map-Transition-Types/root/type</pd:over>
            <pd:iterationElementSlot>transitionType</pd:iterationElementSlot>
            <pd:indexSlot>transitionTypeIndex</pd:indexSlot>
            <pd:outSlot>cumul</pd:outSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Group</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Group</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:group name="Group">
            <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
            <pd:resourceType>ae.process.group</pd:resourceType>
            <pd:x>291</pd:x>
            <pd:y>161</pd:y>
            <pd:width>522</pd:width>
            <pd:height>302</pd:height>
            <pd:collapsedWidth>57</pd:collapsedWidth>
            <pd:collapsedHeight>70</pd:collapsedHeight>
            <pd:groupVariables/>
            <pd:joinToggle>inherit</pd:joinToggle>
            <config>
                <pd:groupType>inputLoop</pd:groupType>
                <pd:serializable>false</pd:serializable>
                <pd:over>$Get-file-by-type/ns3:project/ns3:file</pd:over>
                <pd:iterationElementSlot>act</pd:iterationElementSlot>
                <pd:indexSlot>pos</pd:indexSlot>
                <pd:outSlot>Accum</pd:outSlot>
                <pd:activityOutputName>Format result</pd:activityOutputName>
                <pd:accumulateOutput>true</pd:accumulateOutput>
            </config>
            <pd:inputBindings/>
            <pd:expanded>true</pd:expanded>
            <pd:transition>
                <pd:from>start</pd:from>
                <pd:to>Get XPath string value</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Format result</pd:from>
                <pd:to>end</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Get XPath string value</pd:from>
                <pd:to>Map Data</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Get XPath string value</pd:from>
                <pd:to>Log</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>error</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Log</pd:from>
                <pd:to>Map Data</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Map Data</pd:from>
                <pd:to>Java Code</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Java Code</pd:from>
                <pd:to>Format result</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:activity name="Get XPath string value">
                <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
                <pd:resourceType>ae.process.subprocess</pd:resourceType>
                <pd:x>371</pd:x>
                <pd:y>234</pd:y>
                <config>
                    <processName>/CodeReview/Processes/Tools/Get XPath string value.process</processName>
                </config>
                <pd:inputBindings>
                    <EvaluateXpath>
                        <xpath>
                            <xsl:value-of select="concat(&quot;//pd:transition[pd:conditionType = '&quot;, $transitionType/type, &quot;']/pd:lineColor/text()&quot;)"/>
                        </xpath>
                        <xml-data>
                            <xsl:value-of select="$act/ns3:file"/>
                        </xml-data>
                        <namespace-declaration>
                            <xsl:value-of select="&quot;xmlns:pd='http://xmlns.tibco.com/bw/process/2003'&quot;"/>
                        </namespace-declaration>
                    </EvaluateXpath>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="Map Data">
                <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
                <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
                <pd:x>511</pd:x>
                <pd:y>226</pd:y>
                <config>
                    <element>
                        <xsd:element name="root">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="result" minOccurs="0" maxOccurs="unbounded">
                                        <xsd:complexType>
                                            <xsd:sequence>
                                                <xsd:element name="value" type="xsd:string"/>
                                                <xsd:element name="process" type="xsd:string"/>
                                            </xsd:sequence>
                                        </xsd:complexType>
                                    </xsd:element>
                                    <xsd:element ref="pfx4:error" minOccurs="0"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </element>
                </config>
                <pd:inputBindings>
                    <root>
                        <xsl:for-each select="$Get-XPath-string-value/results/result">
                            <result>
                                <value>
                                    <xsl:value-of select="."/>
                                </value>
                                <process>
                                    <xsl:value-of select="$act/ns3:file/@fullName"/>
                                </process>
                            </result>
                        </xsl:for-each>
                        <xsl:if test="$_error">
                            <pfx4:error>
                                <pfx4:error-name>
                                    <xsl:value-of select="if(exists($_error/ns4:ErrorReport/Class) and $_error/ns4:ErrorReport/Class !='') then&#xA;$_error/ns4:ErrorReport/Class&#xA;else if(exists($_error/ns4:ErrorReport/FullClass) and $_error/ns4:ErrorReport/FullClass !='') then&#xA;$_error/ns4:ErrorReport/FullClass&#xA;else if(exists($_error/ns4:ErrorReport/Msg) and $_error/ns4:ErrorReport/Msg !='') then&#xA;substring($_error/ns4:ErrorReport/Msg, 1, 50)&#xA;else &#xA;substring($_error/ns4:ErrorReport/StackTrace, 1, 50)"/>
                                </pfx4:error-name>
                                <pfx4:rule>
                                    <xsl:value-of select="'MAI-001'"/>
                                </pfx4:rule>
                                <pfx4:context>
                                    <xsl:value-of select="$act/ns3:file/@fullName"/>
                                </pfx4:context>
                            </pfx4:error>
                        </xsl:if>
                    </root>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="Log">
                <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
                <pd:resourceType>ae.activities.log</pd:resourceType>
                <pd:x>442</pd:x>
                <pd:y>386</pd:y>
                <config>
                    <role>User</role>
                </config>
                <pd:inputBindings>
                    <ns5:ActivityInput>
                        <message>
                            <xsl:value-of select="tib:render-xml($_error/ns4:ErrorReport)"/>
                        </message>
                    </ns5:ActivityInput>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="Java Code">
                <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
                <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
                <pd:x>578</pd:x>
                <pd:y>322</pd:y>
                <config>
                    <fileName>MAI001CollectTransitionColorsJavaCode</fileName>
                    <packageName>CodeReview.Processes.Review.MAI001CollectTransitionColors</packageName>
                    <fullsource>package CodeReview.Processes.Review.MAI001CollectTransitionColors;
import java.util.*;
public class MAI001CollectTransitionColorsJavaCode{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String[] inValues = null;
	protected String[] outValues = null;
	public String[] getinValues() {
		return inValues;
	}
	public void setinValues(String[] val) {
		inValues = val;
	}
	public String[] getoutValues() {
		return outValues;
	}
	public void setoutValues(String[] val) {
		outValues = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public MAI001CollectTransitionColorsJavaCode() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String[] inValues
	Out : String[] outValues
* Available Variables: DO NOT MODIFY *****/
		final TreeSet&lt;Integer&gt; set = new TreeSet&lt;Integer&gt;();

		for(String value : this.inValues) {
			set.add(Integer.valueOf(value));
		}
		outValues = new String[set.size()];
		Integer[] tempArray = new Integer[set.size()];
		set.toArray(tempArray);
		for(int i = 0; i &lt; set.size(); i++) {
			outValues[i] = Integer.toHexString((tempArray[i].intValue() &amp; 0x00FFFFFF));
		}
	}
}
</fullsource>
                    <inputData>
                        <row>
                            <fieldName>inValues</fieldName>
                            <fieldType>string</fieldType>
                            <fieldRequired>repeating</fieldRequired>
                        </row>
                    </inputData>
                    <outputData>
                        <row>
                            <fieldName>outValues</fieldName>
                            <fieldType>string</fieldType>
                            <fieldRequired>repeating</fieldRequired>
                        </row>
                    </outputData>
                    <byteCode>
                        <class>
                            <name>MAI001CollectTransitionColorsJavaCode</name>
                            <byteCode>yv66vgAAADIAQwkADwAoCQAPACkKABAAKgcAKwoABAAqCgAKACwKAAQALQoABAAuBwAvBwAwCgAEADEKAAoAMgMA////CgAKADMHADQHADUBAAhpblZhbHVlcwEAE1tMamF2YS9sYW5nL1N0cmluZzsBAAlvdXRWYWx1ZXMBAAtnZXRpblZhbHVlcwEAFSgpW0xqYXZhL2xhbmcvU3RyaW5nOwEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAAtzZXRpblZhbHVlcwEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAAxnZXRvdXRWYWx1ZXMBAAxzZXRvdXRWYWx1ZXMBAAY8aW5pdD4BAAMoKVYBAAZpbnZva2UBAA1TdGFja01hcFRhYmxlBwA0BwArBwASBwA2AQAKRXhjZXB0aW9ucwcANwEAClNvdXJjZUZpbGUBACpNQUkwMDFDb2xsZWN0VHJhbnNpdGlvbkNvbG9yc0phdmFDb2RlLmphdmEMABEAEgwAEwASDAAcAB0BABFqYXZhL3V0aWwvVHJlZVNldAwAOAA5DAA6ADsMADwAPQEAEGphdmEvbGFuZy9TdHJpbmcBABFqYXZhL2xhbmcvSW50ZWdlcgwAPgA/DABAAD0MAEEAQgEAX0NvZGVSZXZpZXcvUHJvY2Vzc2VzL1Jldmlldy9NQUkwMDFDb2xsZWN0VHJhbnNpdGlvbkNvbG9ycy9NQUkwMDFDb2xsZWN0VHJhbnNpdGlvbkNvbG9yc0phdmFDb2RlAQAQamF2YS9sYW5nL09iamVjdAEAFFtMamF2YS9sYW5nL0ludGVnZXI7AQATamF2YS9sYW5nL0V4Y2VwdGlvbgEAB3ZhbHVlT2YBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvSW50ZWdlcjsBAANhZGQBABUoTGphdmEvbGFuZy9PYmplY3Q7KVoBAARzaXplAQADKClJAQAHdG9BcnJheQEAKChbTGphdmEvbGFuZy9PYmplY3Q7KVtMamF2YS9sYW5nL09iamVjdDsBAAhpbnRWYWx1ZQEAC3RvSGV4U3RyaW5nAQAVKEkpTGphdmEvbGFuZy9TdHJpbmc7ACEADwAQAAAAAgAEABEAEgAAAAQAEwASAAAABgABABQAFQABABYAAAAdAAEAAQAAAAUqtAABsAAAAAEAFwAAAAYAAQAAAAgAAQAYABkAAQAWAAAAIgACAAIAAAAGKiu1AAGxAAAAAQAXAAAACgACAAAACwAFAAwAAQAaABUAAQAWAAAAHQABAAEAAAAFKrQAArAAAAABABcAAAAGAAEAAAAOAAEAGwAZAAEAFgAAACIAAgACAAAABiortQACsQAAAAEAFwAAAAoAAgAAABEABQASAAEAHAAdAAEAFgAAADMAAgABAAAADyq3AAMqAbUAASoBtQACsQAAAAEAFwAAABIABAAAABQABAAFAAkABgAOABUAAQAeAB0AAgAWAAAA0gAEAAYAAABruwAEWbcABUwqtAABTSy+PgM2BBUEHaIAGSwVBDI6BSsZBbgABrYAB1eEBAGn/+cqK7YACL0ACbUAAiu2AAi9AApNKyy2AAtXAz4dK7YACKIAGyq0AAIdLB0ytgAMEg1+uAAOU4QDAaf/47EAAAACABcAAAAuAAsAAAAbAAgAHQAfAB4AKQAdAC8AIAA6ACEAQgAiAEgAIwBSACQAZAAjAGoAJgAfAAAAIQAE/wATAAUHACAHACEHACIBAQAA+AAb/QAaBwAjAfoAHwAkAAAABAABACUAAQAmAAAAAgAn</byteCode>
                        </class>
                    </byteCode>
                </config>
                <pd:inputBindings>
                    <javaCodeActivityInput>
                        <xsl:for-each select="$Map-Data/root/result/value">
                            <inValues>
                                <xsl:value-of select="."/>
                            </inValues>
                        </xsl:for-each>
                    </javaCodeActivityInput>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="Format result">
                <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
                <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
                <pd:x>715</pd:x>
                <pd:y>322</pd:y>
                <config>
                    <element>
                        <xsd:element name="root">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element ref="pfx4:review-result"/>
                                    <xsd:element ref="pfx4:errors"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </element>
                </config>
                <pd:inputBindings>
                    <root>
                        <pfx4:review-result>
                            <pfx4:rule>
                                <xsl:attribute name="disabled">
                                    <xsl:value-of select="$Start/pfx3:root/pfx3:disabled"/>
                                </xsl:attribute>
                                <xsl:attribute name="ruleId">
                                    <xsl:value-of select="&quot;MAI-001&quot;"/>
                                </xsl:attribute>
                                <xsl:for-each select="$Java-Code/javaCodeActivityOutput/outValues">
                                    <pfx4:result>
                                        <pfx4:resource>
                                            <xsl:value-of select="$act/ns3:file/@name"/>
                                        </pfx4:resource>
                                        <pfx4:key>
                                            <xsl:value-of select="&quot;process&quot;"/>
                                        </pfx4:key>
                                        <pfx4:value>
                                            <xsl:value-of select="$act/ns3:file/@name"/>
                                        </pfx4:value>
                                        <pfx4:child>
                                            <pfx4:key>
                                                <xsl:value-of select="local-name($transitionType/type)"/>
                                            </pfx4:key>
                                            <pfx4:value>
                                                <xsl:value-of select="$transitionType/type"/>
                                            </pfx4:value>
                                        </pfx4:child>
                                        <pfx4:child>
                                            <pfx4:key>
                                                <xsl:value-of select="&quot;color&quot;"/>
                                            </pfx4:key>
                                            <pfx4:value>
                                                <xsl:value-of select="concat('#', &#xA;&#x9;tib:pad-front(upper-case(text()), 6, '0')&#xA;&#x9;)"/>
                                            </pfx4:value>
                                        </pfx4:child>
                                    </pfx4:result>
                                </xsl:for-each>
                            </pfx4:rule>
                        </pfx4:review-result>
                        <pfx4:errors>
                            <xsl:copy-of select="$Map-Data/root/pfx4:error"/>
                        </pfx4:errors>
                    </root>
                </pd:inputBindings>
            </pd:activity>
        </pd:group>
    </pd:group>
    <pd:activity name="Rule Card">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>768</pd:x>
        <pd:y>66</pd:y>
        <config>
            <element>
                <xsd:element name="cards">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx5:rule" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <cards>
                <pfx5:rule>
                    <pfx5:key>
                        <xsl:value-of select="&quot;MAI-001&quot;"/>
                    </pfx5:key>
                    <pfx5:name>
                        <xsl:value-of select="&quot;Collect Transition Colors&quot;"/>
                    </pfx5:name>
                    <pfx5:severity>
                        <xsl:value-of select="&quot;MAJOR&quot;"/>
                    </pfx5:severity>
                    <pfx5:description>
                        <xsl:value-of select="&quot;Collect Transition Colors&quot;"/>
                    </pfx5:description>
                </pfx5:rule>
            </cards>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get file by type</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get file by type</pd:from>
        <pd:to>Map Transition Types</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Iterate on transition type</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Transition Types</pd:from>
        <pd:to>Iterate on transition type</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Rule Card</pd:to>
        <pd:xpathDescription>Disabled</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/pfx3:root/pfx3:disabled = 'true'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Rule Card</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>